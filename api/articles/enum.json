{"title":"关键字：enum","uid":"385337453c0362e2e26547a4a0f5d697","slug":"enum","date":"2021-05-31T02:39:00.000Z","updated":"2021-09-01T16:33:15.668Z","comments":true,"path":"api/articles/enum.json","keywords":null,"cover":null,"content":"<h2 id=\"枚举类的属性：\"><a href=\"#枚举类的属性：\" class=\"headerlink\" title=\"枚举类的属性：\"></a>枚举类的属性：</h2><p>1.枚举类不应允许被改动，用private final修饰</p>\n<p>2.使用的时候应该在构造器里赋值</p>\n<p>3.定义带参的构造器，则在列出枚举值时也必须对应的传入参数。</p>\n<p>代码：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"> \nclass Season&#123;\n    &#x2F;&#x2F;1.声明Season对象的属性:private final修饰\n    private final String seasonName;\n    private final String seasonDesc;\n \n    &#x2F;&#x2F;2.私有化类的构造器,并给对象属性赋值\n    private Season(String seasonName,String seasonDesc)&#123;\n        this.seasonName &#x3D; seasonName;\n        this.seasonDesc &#x3D; seasonDesc;\n    &#125;\n \n    &#x2F;&#x2F;3.提供当前枚举类的多个对象：public static final的\n    public static final Season SPRING &#x3D; new Season(&quot;春天&quot;,&quot;春暖花开&quot;);\n    public static final Season SUMMER &#x3D; new Season(&quot;夏天&quot;,&quot;夏日炎炎&quot;);\n    public static final Season AUTUMN &#x3D; new Season(&quot;秋天&quot;,&quot;秋高气爽&quot;);\n    public static final Season WINTER &#x3D; new Season(&quot;冬天&quot;,&quot;冰天雪地&quot;);\n&#125;</code></pre>\n\n<h2 id=\"Enum类的方法：\"><a href=\"#Enum类的方法：\" class=\"headerlink\" title=\"Enum类的方法：\"></a>Enum类的方法：</h2><p>1.values()方法：返回枚举类型的对象数组。该方法可以很方便地遍历所有枚举值。</p>\n<p>2.valueOf(String str):把字符串转成对应的枚举类对象。</p>\n<p>3.toString()：返回当前枚举类对象常量的名称。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">注意：枚举类不可以被clone，如果调用clone会抛出一个CloneNotSupportedException的错误。</code></pre>","text":"枚举类的属性：1.枚举类不应允许被改动，用private final修饰 2.使用的时候应该在构造器里赋值 3.定义带参的构造器，则在列出枚举值时也必须对应的传入参数。 代码： class Season&#123; &#x2F;&#x2F;1.声明Season对象的属性:priv...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%9A%E4%B8%BE%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%EF%BC%9A\"><span class=\"toc-text\">枚举类的属性：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Enum%E7%B1%BB%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">Enum类的方法：</span></a></li></ol>","author":{"name":"追了又追","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/konghaowen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"mapped":true,"prev_post":{"title":"MyBatis","uid":"7a897380fbf2b52c7fdc533d413e1985","slug":"MyBatis","date":"2021-05-31T02:39:00.000Z","updated":"2021-09-01T16:27:08.588Z","comments":true,"path":"api/articles/MyBatis.json","keywords":null,"cover":null,"text":"简介MyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。2013年11月迁移到Github。 作用MyBatis能帮助我们快速开发基于J...","link":"","photos":[],"count_time":{"symbolsCount":209,"symbolsTime":"1 mins."},"categories":[{"name":"后端","slug":"后端","count":1,"path":"api/categories/后端.json"}],"tags":[],"author":{"name":"追了又追","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/konghaowen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}}},"next_post":{"title":"KMP算法","uid":"ed698b80a4ed647896206c94dc889942","slug":"KMP","date":"2021-01-08T11:24:37.000Z","updated":"2021-09-01T16:26:48.512Z","comments":true,"path":"api/articles/KMP.json","keywords":null,"cover":[],"text":"KMP简介KMP算法是我们数据结构串中最难也是最重要的算法。难是因为KMP算法的代码很优美简洁干练，但里面包含着非常深的思维。真正理解代码的人可以说对KMP算法的了解已经相当深入了。而且这个算法的不少东西的确不容易讲懂，很多正规的书本把概念一摆出直接劝退无数人。这篇文章将尽量以最...","link":"","photos":[],"count_time":{"symbolsCount":750,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":1,"path":"api/categories/数据结构.json"}],"tags":[{"name":"数据结构复习","slug":"数据结构复习","count":1,"path":"api/tags/数据结构复习.json"},{"name":"串","slug":"串","count":1,"path":"api/tags/串.json"}],"author":{"name":"追了又追","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/konghaowen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}}}}